datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt DateTime @default(now())
  email     String?  @unique
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  password  String
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model Order {
  createdAt  DateTime  @default(now())
  customer   Customer? @relation(fields: [customerId], references: [id])
  customerId String?
  discount   Float?
  id         String    @id @default(cuid())
  product    Product?  @relation(fields: [productId], references: [id])
  productId  String?
  quantity   Int?
  totalPrice Int?
  updatedAt  DateTime  @updatedAt
}

model Customer {
  address   Address? @relation(fields: [addressId], references: [id])
  addressId String?
  createdAt DateTime @default(now())
  email     String?
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  orders    Order[]
  phone     String?
  updatedAt DateTime @updatedAt
}

model Address {
  address_1 String?
  address_2 String?
  city      String?
  createdAt DateTime   @default(now())
  customers Customer[]
  id        String     @id @default(cuid())
  state     String?
  updatedAt DateTime   @updatedAt
  zip       Int?
}

model Product {
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  itemPrice   Float?
  name        String?
  orders      Order[]
  updatedAt   DateTime @updatedAt
}

model Role {
  createdAt     DateTime     @default(now())
  id            String       @id @default(cuid())
  updatedAt     DateTime     @updatedAt
  userProfile   UserProfile? @relation(fields: [userProfileId], references: [id])
  userProfileId String?
}

model UserProfile {
  appMetadata      Json?
  aud              String?
  audience         String?
  confirmationDate DateTime?
  confirmedAt      DateTime?
  createdAt        DateTime  @default(now())
  email            String?
  emailAddress     String?
  emailConfirmedAt DateTime?
  id               String    @id @default(cuid())
  identities       Json?
  isAnonymous      Boolean?
  lastSignInAt     DateTime?
  phone            String?
  phoneConfirmedAt DateTime?
  phoneNumber      String?
  role             String?
  roles            Role[]
  supabaseId       String?
  supabaseUserId   String?
  updatedAt        DateTime  @updatedAt
  userIdentities   Json?
  userMetadata     Json?
  userRole         String?
}
